# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from satellite.debug.larky_gateway import gateway_pb2 as satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2


class LarkyGatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DebugSession = channel.stream_stream(
                '/larky_gateway.LarkyGateway/DebugSession',
                request_serializer=satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2.ClientEvent.SerializeToString,
                response_deserializer=satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2.ServerEvent.FromString,
                )


class LarkyGatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DebugSession(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LarkyGatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DebugSession': grpc.stream_stream_rpc_method_handler(
                    servicer.DebugSession,
                    request_deserializer=satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2.ClientEvent.FromString,
                    response_serializer=satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2.ServerEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'larky_gateway.LarkyGateway', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LarkyGateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DebugSession(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/larky_gateway.LarkyGateway/DebugSession',
            satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2.ClientEvent.SerializeToString,
            satellite_dot_debug_dot_larky__gateway_dot_gateway__pb2.ServerEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
